{"remainingRequest":"/Users/francescamorini/projects/policy-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/policy-portal/src/App.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/francescamorini/projects/policy-portal/src/App.vue","mtime":1582621677659},{"path":"/Users/francescamorini/projects/policy-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/policy-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/policy-portal/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/policy-portal/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/policy-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/policy-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLy8gQGltcG9ydCB1cmwoImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1JQk0rUGxleCtNb25vOjQwMCw3MDBpfElCTStQbGV4K1NhbnN8SUJNK1BsZXgrU2FucytDb25kZW5zZWR8SUJNK1BsZXgrU2VyaWYmZGlzcGxheT1zd2FwIik7CkBpbXBvcnQgImxpYnJhcnkvc3JjL3N0eWxlL2Jhc2Uuc2NzcyI7CgoqIHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94Owp9CgpodG1sIHsKICBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDsKfQoKI2FwcCB7CiAgZm9udC1mYW1pbHk6ICJJQk0gUGxleCBTYW5zIiwgc2Fucy1zZXJpZjsKfQoKc3ZnIHRleHQgewogIGZvbnQtc2l6ZTogMC42ZW07Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\" ref=\"app\">\n    <SensesMenu />\n    <Navigation v-if=\"!isMobile\" />\n    <NavigationMobile v-if=\"isMobile\" />\n    <SensesDownload\n      :selected=\"selected\"\n      :ids=\"ids\"\n      :title=\"title\"\n      :close=\"close\" />\n    <!-- <BackgroundLine /> -->\n    <Item v-for=\"data in modulesData\" v-bind:key=\"data.path + '-' + reflowTime\" :data=\"data\" :id=\"'to-' + data.path\">\n      <template v-slot:figure=\"props\">\n        <Home v-if=\"props.data.path === 'intro'\" :mobile=\"isMobile\"  />\n        <Earth v-else-if=\"props.data.path === 'earth'\" :ratio=\"props.ratio\" :mobile=\"isMobile\" />\n        <End v-else-if=\"props.data.path === 'end'\" :mobile=\"isMobile\" />\n        <div v-else>\n          <ModuleText :data=\"props.data\" :ratio=\"props.ratio\" :mobile=\"isMobile\" :active=\"active\" @update:active=\"updateActive\"/>\n          <AnimatedSvg :ratio=\"props.ratio\" :svg=\"getSvgPath(props.data.path)\"/>\n        </div>\n      </template>\n    </Item>\n  </div>\n</template>\n\n<script>\nimport SensesMenu from \"library/src/components/SensesMenu.vue\";\nimport SensesDownload from 'library/src/components/SensesDownload.vue'\nimport Item from \"./components/Item.vue\";\nimport Home from \"./components/Home.vue\";\nimport Navigation from \"./components/Navigation.vue\";\nimport NavigationMobile from \"./components/NavigationMobile.vue\";\nimport End from \"./components/End.vue\";\nimport BackgroundLine from \"./components/BackgroundLine.vue\";\nimport AnimatedSvg from \"./components/AnimatedSvg.vue\";\nimport ModuleText from \"./components/ModuleText.vue\";\nimport Earth from \"./components/Earth.vue\";\nimport { mapState, mapGetters } from \"vuex\";\n\nlet ticking = false;\n\nexport default {\n  name: \"app\",\n  components: {\n    Home,\n    Navigation,\n    End,\n    Item,\n    AnimatedSvg,\n    ModuleText,\n    Earth,\n    BackgroundLine,\n    SensesMenu,\n    NavigationMobile,\n    SensesDownload\n  },\n  data () {\n    return {\n      active: false,\n      selected: [],\n      ids: '',\n      title: '',\n      close: ''\n    }\n  },\n  computed: {\n    ...mapState([\"isMobile\", \"activePortal\", \"reflowTime\"]),\n    ...mapGetters([\"modulesData\"])\n  },\n  methods: {\n    getSvgPath: function(path) {\n      const p = this.isMobile ? \"mobile/\" : \"desktop/\";\n      return p + path + \".svg\";\n    },\n    onScroll: function(e) {\n      if (!ticking) {\n        window.requestAnimationFrame(() => {\n          this.$store.state.scrollY = window.scrollY;\n          ticking = false;\n        });\n        ticking = true;\n      }\n    },\n    reflow: function(e) {\n      this.$store.state.isMobile = window.innerWidth < 700;\n      this.$store.state.reflowTime = Date.now()\n      if (e.type === \"load\") {\n        setTimeout(() => {\n          this.$store.state.activePortalPath = \"intro\";\n        }, 100);\n      }\n    },\n    hashchange: function(){\n      // console.log(location.hash)\n      const top = document\n        .getElementById(location.hash.replace(\"#/\", \"to-\"))\n        .offsetTop + 10\n\n      window.scrollTo({\n        top: top,\n        behavior: 'smooth',\n      })\n    },\n    updateActive (id, downloadIDs, title) {\n      console.log(id, downloadIDs, title)\n      this.selected = id\n      this.ids = downloadIDs\n      this.title = title\n    }\n  },\n  mounted: function() {\n    console.log(this.updateActive)\n    console.log(this.modulesData);\n    // this.modulesData.forEach(d => console.log(d.path));\n    window.addEventListener(\"scroll\", this.onScroll);\n    window.addEventListener(\"load\", this.reflow);\n    window.addEventListener(\"resize\", this.reflow);\n    window.addEventListener(\"hashchange\", this.hashchange);\n  },\n  beforeDestroy: function() {\n    window.removeEventListener(\"scroll\", this.onScroll);\n    window.removeEventListener(\"load\", this.reflow);\n    window.removeEventListener(\"resize\", this.reflow);\n    window.removeEventListener(\"hashchange\", this.hashchange);\n  }\n};\n</script>\n\n<style lang=\"scss\">\n// @import url(\"https://fonts.googleapis.com/css?family=IBM+Plex+Mono:400,700i|IBM+Plex+Sans|IBM+Plex+Sans+Condensed|IBM+Plex+Serif&display=swap\");\n@import \"library/src/style/base.scss\";\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  scroll-behavior: smooth;\n}\n\n#app {\n  font-family: \"IBM Plex Sans\", sans-serif;\n}\n\nsvg text {\n  font-size: 0.6em;\n}\n</style>\n"]}]}